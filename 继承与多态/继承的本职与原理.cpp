/*
1.继承的本质和原理
继承的本质：a.代码的复用 b.
类和类之间的关系：
组合：a part of... ...一部分的关系
继承：a kind of... ...一种的关系

继承方式       基类的访问限定        派生类的访问限定          (mian)外部的访问限定
public 
                  public                  public                        可访问
                protected               protected                      不可访问
                privated                 不可见的                      不可访问        （自己或者友元能访问私有的成员）
protected（基类的成员的访问限定，在派生类里面是不可能超过继承方式的）
                 public                  protected                      不可访问       
                protected                protected                      不可访问
                 private                  不可见的                      不可访问
private
                 public                  private                        不可访问
                protected                private                        不可访问
                private                  不可见的                       不可访问          

总结:
1.外部只能访问对象的public成员，protected和private的成员无法直接访问
2.在继承结构中，派生类从基类可以继承过来private的成员，但是派生类却无法直接访问
3.protected和private的区别？
在基类中定义的成员，想被派生类访问，但是不想被外部访问，那么在基类中，把相关成员定义成protected保护的；
                    如果派生类和外部东不打算访问，那么在基类中，就把相关成员定义成private私有的。

默认的继承方式是什么？
要看派生类是class定义的，还是struct定义的？
class定义派生类，默认继承方式就是private私有的
struct定义派生类，默认继承方式就是public公有的


2.派生类的构造过程
派生类可以从基类继承来所有的成员（变量和方法），除过构造函数和析构函数

派生类怎么初始化从基类继承来的成员变量？
通过调用基类相应的构造函数来初始化

派生类的构造函数和析构函数，负责初始化和清理派生类部分
派生类从基类继承来的成员的初始化和清理由谁负责呢？是由基类的构造函数和析构函数来负责

派生类对象构造和析构的过程是：
1.派生类调用基类的构造函数，初始化从基类继承来的成员
2.调用派生类自己的构造函数，初始化派生类自己特有的成员
......派生类对象的作用域到期了
3.调用派生类的析构函数，释放派生类成员可能占用的外部资源（堆内存，文件）
4.调用基类的析构函数，释放派生类内存中，从基类继承来的成员可能占用的外部资源（堆内存，文件）
*/
